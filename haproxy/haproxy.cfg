# GLOBALS
global
log stdout format raw local0 debug
log stdout format raw local1 info
log stdout format raw local2 err
chroot /var/lib/haproxy
pidfile /var/run/haproxy.pid
stats timeout 1m
user haproxy
group haproxy
stats socket /var/lib/haproxy/stats
maxconn 5000
# Distribute the health checks with a bit of randomness
spread-checks 5

# Global default values
defaults

# Logging
log global

# HTTP mode config
mode http
option log-health-checks
option abortonclose
option dontlognull
option forwardfor

# TIMEOUTS
# Adjust later based on CI BUILDS
timeout http-request 10s
timeout client  1m
timeout server  1m
timeout connect 10s
timeout check 10s
timeout queue 1m

# perf tune
retries 3
option redispatch

frontend mk-http
option tcp-smart-accept
option clitcpka
bind :80 name httpv4 tfo
bind :::80 name httpv6 v6only tfo

# ACL
acl failed_request status 400 401 403 404 405 408 429 500 503
acl acl_jenkins_fqdn hdr(host) -i localhost

# log err
http-response set-log-level err if failed_request

# capture headers
http-request capture req.hdr(User-Agent) len 70
capture response header Content-length len 9

# Redirects

http-request redirect code 301 location http://%[req.hdr(Host)]%[capture.req.uri] if !acl_jenkins_fqdn 

#Headers 
http-request set-header X-Forwarded-Host %[req.hdr(Host)]
http-request del-header X-Forwarded-Port
http-request set-header X-Forwarded-Proto https if { ssl_fc }
# Delete Server Header
http-response del-header Connection

#HAProxy health check (Yeah..., ironic)
monitor-uri /ha-httpchk

use_backend jenkins_ci if acl_jenkins_fqdn

default_backend jenkins_ci

# BACK ENDS
backend jenkins_ci
option tcp-smart-connect
option srvtcpka
http-send-name-header Host
option httpchk GET /login HTTP/1.1\r\nHost:\ localhost
server srv mk-jenkins:8080 check inter 5s rise 2 fall 10
